<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zriot.elicense.illegal.dao.BillInfoMapper">

  <sql id="billInfoColumn">
    id as id, 
    bill_id as billId, 
    customer_name as customerName, 
    from_address as fromAddress, 
    to_address as toAddress, 
    sender as sender, 
    sender_mobile as senderMobile, 
    sender_identity_card as senderIdentityCard, 
    receiver as receiver, 
    receiver_mobile as receiverMobile, 
    car_no as carNo, 
    receive_date as receiveDate, 
    is_finsh_fee as isFinshFee, 
    handled_by as handledBy, 
    mark as mark, 
    create_date as createDate, 
    update_date as updateDate, 
    is_finsh_all as isFinshAll, 
    creator as creator, 
    update_user as updateUser, 
    delete_flag as deleteFlag, 
    customer_info_id as customerInfoId, 
    product_name as productName, 
    product_pack as productPack, 
    product_number as productNumber, 
    receiver_identity_card as receiverIdentityCard
  </sql>
  
  <sql id="billInfoAndBillFeeColumn">
    t.id as id, 
	t.bill_id as billId, 
	t2.customer_name as customerName, 
	t.from_address as fromAddress, 
	t.to_address as toAddress, 
	t.sender as sender, 
	t.sender_mobile as senderMobile, 
	t.sender_identity_card as senderIdentityCard, 
	t.receiver as receiver, 
	t.receiver_mobile as receiverMobile, 
	t.car_no as carNo, 
	t.receive_date as receiveDate, 
	t.is_finsh_fee as isFinshFee, 
	t.handled_by as handledBy, 
	t.mark as mark, 
	t.create_date as createDate, 
	t.update_date as updateDate, 
	t.is_finsh_all as isFinshAll, 
	t.creator as creator, 
	t.update_user as updateUser, 
	t.delete_flag as deleteFlag,
	t.customer_info_id as customerInfoId,
	t.product_name as productName,
	t.product_pack as productPack,
	t.product_number as productNumber,
	t.receiver_identity_card as receiverIdentityCard,
	t1.transport_fee as transportFee, 
	t1.deliver_fee as deliverFee, 
	t1.shipment_fee as shipmentFee, 
	t1.charge_fee as chargeFee, 
	t1.warehouse_fee as warehouseFee, 
	t1.collection_fee as collectionFee, 
	t1.insurance_fee as insuranceFee, 
	t1.other_fee as otherFee, 
	t1.fee_pay_type as feePayType, 
	t1.fee_receivable as feeReceivable, 
	t1.real_charge as realCharge
  </sql>
  
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" parameterType="com.zriot.elicense.illegal.model.BillInfo">
    insert into bill_info 
    	(bill_id, customer_name, from_address, to_address, sender, sender_mobile, sender_identity_card, receiver, receiver_mobile,
    	car_no, receive_date, is_finsh_fee, handled_by, mark, create_date, update_date, is_finsh_all, creator, update_user, delete_flag,
    	customer_info_id, product_name, product_pack, product_number, receiver_identity_card)
    values
    	(#{billId},#{customerName},#{fromAddress},#{toAddress},#{sender},#{senderMobile},#{senderIdentityCard},#{receiver},#{receiverMobile},
    	#{carNo},#{receiveDate},#{isFinshFee},#{handledBy},#{mark},#{createDate},#{updateDate},#{isFinshAll},#{creator},#{updateUser},#{deleteFlag},
    	#{customerInfoId},#{productName},#{productPack},#{productNumber},#{receiverIdentityCard})
  </insert>
  
  
  <update id="update" parameterType="com.zriot.elicense.illegal.model.BillInfo">
  	update bill_info
  		<set>
	  		<if test="billId != null">
	  			bill_id = #{billId},
	  		</if>
	  		<if test="customerName != null">
	  			customer_name = #{customerName},
	  		</if>
	  		<if test="fromAddress != null">
	  			from_address = #{fromAddress},
	  		</if>
	  		<if test="toAddress != null">
	  			to_address = #{toAddress},
	  		</if>
	  		<if test="sender != null">
	  			sender = #{sender},
	  		</if>
	  		<if test="senderMobile != null">
	  			sender_mobile = #{senderMobile},
	  		</if>
	  		<if test="senderIdentityCard != null">
	  			sender_identity_card = #{senderIdentityCard},
	  		</if>
	  		<if test="receiver != null">
	  			receiver = #{receiver},
	  		</if>
	  		<if test="receiverMobile != null">
	  			receiver_mobile = #{receiverMobile},
	  		</if>
	  		<if test="carNo != null">
	  			car_no = #{carNo},
	  		</if>
	  		<if test="receiveDate != null">
	  			receive_date = #{receiveDate},
	  		</if>
	  		<if test="isFinshFee != null">
	  			is_finsh_fee = #{isFinshFee},
	  		</if>
	  		<if test="handledBy != null">
	  			handled_by = #{handledBy},
	  		</if>
	  		<if test="mark != null">
	  			mark = #{mark},
	  		</if>
	  		<if test="createDate != null">
	  			create_date = #{createDate},
	  		</if>
	  		<if test="updateDate != null">
	  			update_date = #{updateDate},
	  		</if>
	  		<if test="isFinshAll != null">
	  			is_finsh_all = #{isFinshAll},
	  		</if>
	  		<if test="creator != null">
	  			creator = #{creator},
	  		</if>
	  		<if test="updateUser != null">
	  			update_user = #{updateUser},
	  		</if>
	  		<if test="deleteFlag != null">
	  			delete_flag = #{deleteFlag},
	  		</if>
	  		<if test="customerInfoId != null">
	  			customer_info_id = #{customerInfoId},
	  		</if>
	  		<if test="productName != null">
	  			product_name = #{productName},
	  		</if>
	  		<if test="productPack != null">
	  			product_pack = #{productPack},
	  		</if>
	  		<if test="productNumber != null">
	  			product_number = #{productNumber},
	  		</if>
	  		<if test="receiverIdentityCard != null">
	  			receiver_identity_card = #{receiverIdentityCard},
	  		</if>
  		</set>
  		where id = #{id} 
  </update>
  
  
  <update id="delete" parameterType="java.lang.Integer">
  		update bill_info set delete_flag = 1 where id = #{id}
  </update>
  
  <select id="searchById" parameterType="java.lang.Integer"  resultType="com.zriot.elicense.illegal.model.BillInfo">
  	select 
    <include refid="billInfoColumn" />
    from bill_info
    where id = #{id} and delete_flag != 1
  </select>
  
  <select id="searchBillList" parameterType="com.zriot.elicense.illegal.vo.BillListSearchVo"  resultType="com.zriot.elicense.illegal.vo.BillListSearchResultVo">
  	select 
    <include refid="billInfoAndBillFeeColumn" />
    from bill_info t LEFT JOIN customer_info t2 on t.customer_info_id = t2.id, bill_fee t1
    where t.delete_flag != 1 and t.id = t1.bill_info_id
    <if test="customerName != null and '' != customerName">
		and t2.customer_name like concat(concat('%', #{customerName}), '%')
	</if>
	<if test="isFinshAll != null">
		and t.is_finsh_all = #{isFinshAll}
	</if>
	<if test="isFinshFee != null">
		and t.is_finsh_fee = #{isFinshFee}
	</if>
	<if test="beginDate != null">
		and DATE_FORMAT(t.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{beginDate}, '%Y-%m-%d')
	</if>
	<if test="endDate != null">
		and DATE_FORMAT(t.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate}, '%Y-%m-%d')
	</if>
	order by t.create_date desc LIMIT #{beginNo}, #{pageSize}
  </select>
  
  <select id="countBillList" parameterType="com.zriot.elicense.illegal.vo.BillListSearchVo"  resultType="java.lang.Integer">
  	select count(*)
    from bill_info t LEFT JOIN customer_info t2 on t.customer_info_id = t2.id, bill_fee t1
    where t.delete_flag != 1 and t.id = t1.bill_info_id
    <if test="customerName != null and '' != customerName">
		and t2.customer_name like concat(concat('%', #{customerName}), '%')
	</if>
	<if test="isFinshAll != null">
		and t.is_finsh_all = #{isFinshAll}
	</if>
	<if test="isFinshFee != null">
		and t.is_finsh_fee = #{isFinshFee}
	</if>
	<if test="beginDate != null">
		and DATE_FORMAT(t.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{beginDate}, '%Y-%m-%d')
	</if>
	<if test="endDate != null">
		and DATE_FORMAT(t.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(#{endDate}, '%Y-%m-%d')
	</if>
  </select>
  
  
</mapper>